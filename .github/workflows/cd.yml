name: CD
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3.0.2
      - id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: ${{ steps.vars.outputs.tag }}
  build:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: 22.1.0
          java-version: 17
          components: native-image
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Clojure
        uses: DeLaGuardo/setup-clojure@5.1
        with:
          cli: 1.11.1.1113
      - name: Build binary
        run: clojure -T:build native-image
      - name: Upload release assets
        if: success()
        id: upload-release-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: targets/version something something...